import tkinter as tk
from collections import defaultdict
from datetime import datetime, timedelta
from tkinter import filedialog

# Funcție pentru a verifica dacă a stat mai mult de 5 minute
def mai_mult_de_5_minute(durata):
    return durata.total_seconds() > 5 * 60

# Funcție pentru a actualiza tabelul cu statistica
def actualizare_statistica():
    # Șterge rândurile existente din tabel
    for widget in tabel_frame.winfo_children():
        widget.destroy()

    # Adaugă antetul tabelului
    tk.Label(tabel_frame, text="Număr", borderwidth=1, relief="solid").grid(row=0, column=0, sticky="nsew")
    tk.Label(tabel_frame, text="Timp", borderwidth=1, relief="solid").grid(row=0, column=1, sticky="nsew")
    tk.Label(tabel_frame, text="Reducere", borderwidth=1, relief="solid").grid(row=0, column=2, sticky="nsew")

    # Adaugă rândurile cu datele statistice
    row = 1
    for numar, timp in statistica.items():
        timp_delta = timedelta(seconds=timp)
        reducere = "Reducere disponibilă!" if mai_mult_de_5_minute(timp_delta) else "Fără reducere disponibilă"
        
        tk.Label(tabel_frame, text=str(numar), borderwidth=1, relief="solid").grid(row=row, column=0, sticky="nsew")
        tk.Label(tabel_frame, text=str(timp_delta), borderwidth=1, relief="solid").grid(row=row, column=1, sticky="nsew")
        tk.Label(tabel_frame, text=reducere, borderwidth=1, relief="solid").grid(row=row, column=2, sticky="nsew")
        
        row += 1

# Funcție pentru a încărca numere din fișier
def incarca_din_fisier():
    fisier = filedialog.askopenfilename()
    with open(fisier, 'r') as f:
        for linie in f:
            try:
                numar = int(linie.strip())
                now = datetime.now()
                if numar in last_timestamp:
                    statistica[numar] += (now - last_timestamp[numar]).total_seconds()
                last_timestamp[numar] = now
            except ValueError:
                pass  # Ignorăm liniile care nu conțin numere valide
    actualizare_statistica()

# Creare interfață grafică
root = tk.Tk()
root.title("Statistica numere")

# Buton pentru încărcarea numerelor din fișier
incarca_button = tk.Button(root, text="Încarcă numere din fișier", command=incarca_din_fisier)
incarca_button.pack()

# Frame pentru tabel
tabel_frame = tk.Frame(root)
tabel_frame.pack()

# Dicționar pentru a ține evidența timpului de intrare pentru fiecare număr
last_timestamp = {}

# Dicționar pentru a stoca cât timp a stat fiecare număr
statistica = defaultdict(int)

# Actualizarea statisticilor la început
actualizare_statistica()

# Rularea buclei principale a interfeței grafice
root.mainloop()
